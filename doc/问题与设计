
目前设计：
	程序整体结构为MVC架构
	1. MODE 设计
		1）系统数据总共有以下几个部分：
				餐厅、服务员、语言、一级菜单、二级菜单、菜品、配料、已点菜品列表、已点菜单列表 九个管理项
		2）数据存储形式分三层：
				程序内存中数据结构、手机中Sqlite、Server数据库
				其中，已点菜品列表会在使用中更新，所以它在内存中的表现形式为当前存储在vector中的为当前桌号对应的列表，而其它被切换出去的桌号的已点菜品列表则只存储在Sqlite中。当切换桌号时，转储当前List，并重新读取Sqlite
		3）内存中的数据结构放在appication中，作为全局变量在各Activity中共享。由程序启动时从SQLite读取。
				

	2. Control设计
		1）已点菜品列表用状态机控制，分为 未下单、已下单、已结帐三种状态。未下单时食客可以自行点菜，经服务员下单后迁移到已下单状态，此时只能由服务员进入服务员模式才能更改点菜；服务员点击结帐后，变成已结帐状态，此单不能再更改，同时已点菜品列表可以上传到服务器，上传后本地可删除。（状态机在Application中用一个全局变量控制）
		2）当服务员点击结帐后，正常应该同时上传到服务器，然后本地删除，但有可能当前网络故障或服务器故障导致上传失败，则需要继续保留在Sqlite中。当Sqlite中有已点菜品列表未上传，则需要在服务员模式界面显示一个标识，表示仍有数据未上传，可以等网络好了以后再由服务员手动点击上传。


问题：
	1. 滑动到一级菜单之间，需要两个海报画面，大约停留2秒
	2. 增加餐厅的选择
	3. 一级菜单有大约13个大类
	4. 二级菜单有的多有的少，有可能没有，需要考虑界面美观
	5. 点菜界面中要增加“配料”这个选项。另外有的菜不需要选择的就变灰
	6. 已点菜品列表的描述中要加口味、做法、等4项
	7. 服务员模式中要有加菜的功能。
	8. 点菜时要确定台号归属
	9. 选择一款典型的pad，确定屏幕尺寸、分辨率

	后台不应该做已点菜单的增删操作，而应该只做查询操作??
	
第一阶段开发
数据存储：持久化存储在sqlite以及server数据库
当前正在点单还没有真正下单的那些单子存储在Vector中。可以有多个桌子的单子都还在编辑状态没有下单，这样就有多个vector对应。切换桌子时同时切换对应的数据vector
